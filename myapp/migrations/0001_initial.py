# Generated by Django 5.1.6 on 2025-03-08 04:06

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlastFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hot_metal_temp_th1', models.FloatField(blank=True, null=True)),
                ('hot_metal_temp_th2', models.FloatField(blank=True, null=True)),
                ('hot_metal_temp_th3', models.FloatField(blank=True, null=True)),
                ('hot_metal_temp_th4', models.FloatField(blank=True, null=True)),
                ('uptake_temp_a', models.FloatField(blank=True, null=True)),
                ('uptake_temp_b', models.FloatField(blank=True, null=True)),
                ('uptake_temp_c', models.FloatField(blank=True, null=True)),
                ('uptake_temp_d', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='BlastPressure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cold_blast_pressure', models.FloatField(blank=True, null=True)),
                ('hot_blast_pressure', models.FloatField(blank=True, null=True)),
                ('cold_blast_flow', models.FloatField(blank=True, null=True)),
                ('hot_blast_flow', models.FloatField(blank=True, null=True)),
                ('hot_blast_temperature', models.FloatField(blank=True, null=True)),
                ('raft', models.FloatField(blank=True, null=True)),
                ('new_calc', models.FloatField(blank=True, null=True)),
                ('top_pressure', models.FloatField(blank=True, null=True)),
                ('d_pressure_burden', models.FloatField(blank=True, null=True)),
                ('discharge_level', models.FloatField(blank=True, null=True)),
                ('current_burden_level', models.FloatField(blank=True, null=True)),
                ('moisture_in_hot_blast', models.FloatField(blank=True, null=True)),
                ('coal_injection_rate', models.FloatField(blank=True, null=True)),
                ('coal_injection_rate_ton', models.FloatField(blank=True, null=True)),
                ('sp', models.FloatField(blank=True, null=True)),
                ('oxygen_injection', models.FloatField(blank=True, null=True)),
                ('top_dp', models.FloatField(blank=True, null=True)),
                ('mid_dp', models.FloatField(blank=True, null=True)),
                ('bottom_dp', models.FloatField(blank=True, null=True)),
                ('bottom_k', models.FloatField(blank=True, null=True)),
                ('mid_k', models.FloatField(blank=True, null=True)),
                ('permeability_k_sum', models.FloatField(blank=True, null=True)),
                ('charge_shift_a', models.IntegerField(blank=True, null=True)),
                ('charge_shift_b', models.IntegerField(blank=True, null=True)),
                ('charge_shift_c', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CppPciWeights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_tank_1', models.FloatField(blank=True, null=True)),
                ('pci_n2_supply_pr', models.FloatField(blank=True, null=True)),
                ('feed_tank_2', models.FloatField(blank=True, null=True)),
                ('inst_supply_pr', models.FloatField(blank=True, null=True)),
                ('feed_tank_3', models.FloatField(blank=True, null=True)),
                ('lances_on_coal', models.IntegerField(blank=True, null=True)),
                ('fcs_weight', models.FloatField(blank=True, null=True)),
                ('hmt_production', models.FloatField(blank=True, null=True)),
                ('rcs_1_weight', models.FloatField(blank=True, null=True)),
                ('rcs_2_weight', models.FloatField(blank=True, null=True)),
                ('low_pressure_n2', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Press',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ff_spray_press', models.FloatField(blank=True, null=True)),
                ('ff_hyd_press', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tuyere_cooling_total_flow', models.FloatField(blank=True, null=True)),
                ('tuyere_cooling_pressure_1', models.FloatField(blank=True, null=True)),
                ('tuyere_cooling_pressure_2', models.FloatField(blank=True, null=True)),
                ('tuyere_cooling_tank_level', models.FloatField(blank=True, null=True)),
                ('stack_cooling_total_flow', models.FloatField(blank=True, null=True)),
                ('stack_cooling_pressure', models.FloatField(blank=True, null=True)),
                ('stack_cooling_tank_level', models.FloatField(blank=True, null=True)),
                ('hearth_bottom_total_flow', models.FloatField(blank=True, null=True)),
                ('hearth_bottom_pressure', models.FloatField(blank=True, null=True)),
                ('hearth_bottom_tank_level', models.FloatField(blank=True, null=True)),
                ('secondary_cooling_total_flow', models.FloatField(blank=True, null=True)),
                ('secondary_cooling_pressure', models.FloatField(blank=True, null=True)),
                ('secondary_cooling_tank_level', models.FloatField(blank=True, null=True)),
                ('blt_cooling_flow_total_flow', models.FloatField(blank=True, null=True)),
                ('blt_cooling_tank_level', models.FloatField(blank=True, null=True)),
                ('heat_load_total_flow', models.FloatField(blank=True, null=True)),
                ('heat_load_pressure', models.FloatField(blank=True, null=True)),
                ('heat_load_tank_level', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
    ]
